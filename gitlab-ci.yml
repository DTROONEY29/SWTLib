stages:
  - img:build
  - img:test
  - img:tag

  - deploy:production

.global_variables: &global_variables
    DOCKER_HOST: unix:///var/run/docker.sock
    COMPOSE_HTTP_TIMEOUT: "300"
    SERVER_DOMAIN: "runner.swt.uni-bamberg.de"

##############
### Runner ###
##############

.runner: &runner
  image: firecyberice/docker-toolbox:latest
  tags:
    - builder
    - amd64

.building:
  script: &building
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - >-
        docker build -t ${CI_REGISTRY_IMAGE}:${NEW_TAG}
        --label BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
        --label VCS_URL="${CI_PROJECT_URL}"
        --label VCS_REF="${CI_COMMIT_SHA}"
        --label VERSION="${CI_COMMIT_TAG}"
        --label PROJECT_NAME="${CI_PROJECT_NAME}"
        -f Dockerfile .
    - docker tag  ${CI_REGISTRY_IMAGE}:${NEW_TAG} ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}
    - docker push ${CI_REGISTRY_IMAGE}:${NEW_TAG}

.runtime:
  script: &runtime
    # Show new config
    - docker-compose --file docker-compose-production.yml config
    - echo -e "NAME=${NAME}\nURL=${URL}\nIMAGE=${IMAGE}\nCOMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}" > .env
    - cat .env
    # remove old container and start with new config
    - docker-compose --file docker-compose-production.yml down -v || true
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker-compose --file docker-compose-production.yml pull
    - docker-compose --file docker-compose-production.yml up -d

###################
### Build Image ###
###################

build-latest:
  stage: img:build
  only:
    - master
  <<: *runner
  variables:
    <<: *global_variables
    NEW_TAG: latest
  script: *building

build-non-master:
  stage: img:build
  only:
    - branches
  except:
    - master
  <<: *runner
  variables:
    <<: *global_variables
    NEW_TAG: ${CI_COMMIT_REF_SLUG}
  script: *building

#################
### Tag Image ###
#################
tag-version:
  stage: img:tag
  only:
    - tags
  <<: *runner
  variables:
    <<: *global_variables
    NEW_TAG: ${CI_COMMIT_TAG}
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID} ${CI_REGISTRY_IMAGE}:${NEW_TAG}
    - docker push ${CI_REGISTRY_IMAGE}:${NEW_TAG}

##########################
### Manage deployments ###
##########################

##############
# PRODUCTION #
##############
start_production:
  stage: deploy:production
  only:
    - master
  <<: *runner
  variables:
    <<: *global_variables
    NAME:  ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}
    URL: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}-${CI_PROJECT_ID}.${SERVER_DOMAIN}
    IMAGE: ${CI_REGISTRY_IMAGE}:latest
    COMPOSE_PROJECT_NAME: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_ID}
  environment:
    name: production
    url: http://$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAME-$CI_PROJECT_ID.$SERVER_DOMAIN
    on_stop: stop_production
  script: *runtime

stop_production:
  stage: deploy:production
  when: manual
  only:
    - master
  <<: *runner
  variables:
    <<: *global_variables
    GIT_STRATEGY: none
    NAME:  ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}
    URL: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}-${CI_PROJECT_ID}.${SERVER_DOMAIN}
    IMAGE: ${CI_REGISTRY_IMAGE}:latest
    COMPOSE_PROJECT_NAME: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_ID}
  environment:
    name: production
    action: stop
  script:
    - docker-compose --file docker-compose-production.yml down -v || true
